[IRC]

#
# This file contains the core configuration options of pyGBot. Note that all of 
# the keys have no quotation marks around them; that is, you should be sure to
# make sure they are written as:
# variable = value
# 
# -and NOT as-
#
# variable = 'value' OR variable = "value"
#
# To get the bot running, at minimum you should edit 'host', 'port', 'nick',
# and 'channel'. 
#

# These values specify which server to connect to, and should be preferred to
# 'localaddr' and 'localport'.
# SSL support now included. Change the value to 'true' to enable.

host = irc.quakenet.org
port = 6667
ssl = false

# These values specify a local address to bind to. 'host' and 'port' are 
# preferred. Uncomment these to enable them.

# localaddr = 192.168.0.0
# localport = 20000

# This value controls the nickname of the bot.

nick = pyGBot

# This value is placed in the 'realname' field of the bot's /whois information.
# Note that some IRC networks require the 'realname' field to contain the name
# of the bot's owner.

realname = pyGBot

# This value specifies any user modes to set when connecting. Common modes may
# include +x (hide hostname) etc.

usermodes = 

# This value controls the channel the bot will join. Use a space-seperated
# list of channels. You can make the bot join additional channels by issuing
# the 'join' command to the bot.
#
# Do not insert a '#' mark for the channel name. If you want the bot to join
# channel #pyGBot, make sure this reads:
# channel = pyGBot
# For multiple channels:
# channel = one two three etc

channel = pyGBot

# These values can be used to identify the bot with Nickserv on servers that
# run that particular IRC Service. The 'idnick' field should name the service
# (usually 'Nickserv' is appropriate, but some have unstandard names), and the
# 'idpass' field should be replaced with the password for the nick of the bot.
# Uncomment these values to enable them them.

# idnick = NickServ
# idpass = Nickserv-password

# These values can be changed to allow the bot to become an IRCop. Discouraged.

# opernick = anircop
# operpass = thepassword

# If your server requires a password upon connection, uncomment the following
# value and insert the password. Otherwise, leave it commented out.

# ircpass = server-password

# The purpose of the following values is not entirely clear. Discouraged and
# unsupported.

# plusmodes = abc
# minusmodes = def

# The following value should be kept as is, since it controls how long the bot
# will delay posting subsequent lines to avoid triggering anti-flood measures.

flooddelay = 2

# The following values can be changed to locate log files differently (for
# instance, you might want to log to a www-capable directory to make it
# accessible to your webserver). If they are commented out, they will default
# to logging in the root directory of pyGBot.

# logfile = /opt/pygbot/pygbot.log
# chatlogfile = /opt/pygbot/chat.log

# Logging level affects how much information is logged. Three modes available:
# info, warning, debug.
#
# 'info' is the default and logs basic status messages that indicate successful
# actions (like connecting to the server, joining a channel, a game plugin
# starting a game), along with errors that occur. 'warning' will only log errors
# and warnings, not normal behaviour. 'debug' will log more information from
# pyGBot and plugins that might be useful in finding bugs or technical problems.
# MOST USERS DON'T NEED TO USE 'debug' MODE.

# loglevel = debug

# Unless otherwise noted, you should ignore all the following values unless
# you are positive you know how they work. Changes to this list will not be
# supported, and are highly discouraged.

[version]
number = 0.3.0
name = pyGBot

[Plugins]
system.Startup =
system.Auth =
system.Commands =
system.Modes =

# Optional features. Uncomment to enable.
#system.Log2channel =
#features.Seen =
#probability.Decide =
#reference.Wiki =
#games.ApplesToApples = 
#games.Mafia =
#games.Poker =
#games.Werewolf =
#games.Uno =
#games.Fluxx =

# Plugins to activate on connect

[Plugins.system.Startup]
system.Auth =
system.Commands =
system.Modes =
#system.Log2channel =

# Optional features. Uncomment to enable.
# Make sure they're also enabled under [Plugins]
#probability.Decide =
#features.Seen =
#reference.Wiki =

[Plugins.system.Commands]
_prefix = ^
play = PlayGame
start = PlayGame
stop = StopGame
quit = StopGame
list = ListGames
join = JoinChannel
part = PartChannel
say = Say
do = Do
msg = Msg
help = Help
nick = ChangeNick
seen = Seen
usermode = UserMode
quit = Quit
restart = Restart

# Optional commands.
#statsroll = StatsRoll
#wp = Wiki
#dict = Wiktionary
#xkcd = xkcdWiki

[Plugins.system.Auth]
# Set the authtype value to nickserv to auth via NickServ.
# Command is then simply 'auth', no user or password required.
# Nickserv auth is supported on standard Atheme services.

authtype = pygbot
#authtype = nickserv

# This plugin allows pyGBot to log to a channel. This can be useful, for
# example, to allow users or ops to monitor changes that users in the main
# channel make to a factoid database. This obeys the loglevel property, but
# will never log debug messages to the channel even at loglevel = debug.
#
# channel: channel to log to. Do NOT include the # character in front.
# loglevel: 'warning' or 'info', same effect as loglevel in [IRC]. If the
#     loglevel option in [IRC] is less verbose than the one here, that one is
#     used instead.
# logformat: The log format string. See the fmt arg of the logging.Formatter
#   constructor in the Python docs. Default: "%(asctime)s: %(levelname)s
#   %(message)s"
# dateformat: The date/time format used for "%(asctime)s" in the logformat.
#    Uses the strftime syntax. Default: "%H:%M:%S"
[Plugins.system.Log2channel]
channel = pyGBot-log
#loglevel = info
#logformat = %(asctime)s: %(levelname)s %(message)s
#dateformat = %H:%M:%S

[Plugins.reference.Wiki]
wikiName = Wikipedia
wikiUrl = http://en.wikipedia.org
wikiApi = /w/api.php
wikiBase = /wiki
maxMessageSize = 510
shortUrl = False
